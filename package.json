{
  "name": "reinvest-api",
  "version": "1.0.0",
  "description": "ReInvest API",
  "main": "Reinvest/index.ts",
  "scripts": {
    "lint": "eslint ./Reinvest ./serverless.ts devops --ext .ts",
    "lint:fix": "yarn lint --fix",
    "test:characterization": "ts-mocha -r tsconfig-paths/register -p tsconfig.json --timeout 10000 test/characterization/**/*.test.ts",
    "bdd": "ts-mocha -r tsconfig-paths/register -p tsconfig.json --timeout 10000 'Reinvest/**/*.feature.ts'",
    "tdd": "ts-mocha -r tsconfig-paths/register -p tsconfig.json --timeout 10000 'Reinvest/**/*.test.ts'",
    "development:deploy:saas": "NODE_ENV=development serverless deploy -s development --config serverless-saas.ts",
    "development:deploy:functions": "NODE_ENV=development serverless deploy -s development --config serverless-functions.ts",
    "development:invoke:migrateUp": "NODE_ENV=development sls invoke -s development --function migration --config serverless-functions.ts",
    "development:invoke:migrateDown": "NODE_ENV=development sls invoke -s development --function migration --data 'down' --config serverless-functions.ts",
    "development:destroy:saas": "NODE_ENV=development serverless remove -s development --config serverless-saas.ts",
    "development:destroy:functions": "NODE_ENV=development serverless remove -s development --config serverless-functions.ts",
    "development:logs:api": "sls logs -s development -f api -t  --config serverless-functions.ts",
    "integrations:deploy:saas": "NODE_ENV=integrations serverless deploy -s integrations --config serverless-saas.ts",
    "integrations:deploy:functions": "NODE_ENV=integrations serverless deploy -s integrations --config serverless-functions.ts",
    "integrations:invoke:migrateUp": "NODE_ENV=integrations sls invoke -s integrations --function migration --config serverless-functions.ts",
    "integrations:invoke:migrateDown": "NODE_ENV=integrations sls invoke -s integrations --function migration --data 'down' --config serverless-functions.ts",
    "staging:deploy:saas": "NODE_ENV=staging serverless deploy -s staging --config serverless-saas.ts",
    "staging:deploy:functions": "NODE_ENV=staging serverless deploy -s staging --config serverless-functions.ts",
    "staging:invoke:migrateUp": "NODE_ENV=staging sls invoke -s staging --function migration --config serverless-functions.ts",
    "staging:invoke:migrateDown": "NODE_ENV=staging sls invoke -s staging --function migration --data 'down' --config serverless-functions.ts",
    "global:deploy": "NODE_ENV=global serverless deploy -s global --config serverless-global.ts",
    "global:redeploy": "tag=GLOBAL_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "production:deploy:saas": "NODE_ENV=production serverless deploy -s production --config serverless-saas.ts",
    "production:deploy:functions": "NODE_ENV=production serverless deploy -s production --config serverless-functions.ts",
    "production:invoke:migrateUp": "NODE_ENV=production sls invoke -s production --function migration --config serverless-functions.ts",
    "production:invoke:migrateDown": "NODE_ENV=production sls invoke -s production --function migration --data 'down' --config serverless-functions.ts",
    "local": "NODE_ENV=development SLS_DEBUG=* serverless offline start -s development --ignoreJWTSignature --noTimeout --reloadHandler --config serverless-local.ts",
    "local:invoke:postSignUp": "NODE_ENV=development sls invoke local -s development --function cognitoPostSignUpFunction --path ./devops/local/postSignUpRequest.json --config serverless-local.ts",
    "local:invoke:migrateUp": "NODE_ENV=development sls invoke local -s development --function migration --config serverless-local.ts",
    "local:invoke:migrateDown": "NODE_ENV=development sls invoke local -s development --function migration --data 'down' --config serverless-local.ts",
    "local:server": "docker-compose -f docker-compose.yml up",
    "development:redeploy:saas": "tag=DEVELOPMENT_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "integrations:redeploy:saas": "tag=INTEGRATIONS_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "staging:redeploy:saas": "tag=STAGING_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "production:redeploy:saas": "tag=PRODUCTION_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} "
  },
  "author": "Lukasz Duraj <https://www.linkedin.com/in/%C5%82ukasz-duraj-a4872317b/>",
  "license": "ISC",
  "dependencies": {
    "@apollo/server": "^4.3.0",
    "@as-integrations/aws-lambda": "^1.1.0",
    "@aws-sdk/client-cognito-identity-provider": "^3.259.0",
    "@aws-sdk/client-lambda": "^3.301.0",
    "@aws-sdk/client-s3": "^3.231.0",
    "@aws-sdk/client-sns": "^3.259.0",
    "@aws-sdk/client-sqs": "3.276",
    "@aws-sdk/s3-request-presigner": "^3.231.0",
    "@graphql-tools/delegate": "^9.0.22",
    "@graphql-tools/merge": "^8.3.14",
    "@graphql-tools/schema": "^9.0.12",
    "@graphql-tools/stitch": "^8.7.36",
    "@sentry/node": "^7.47.0",
    "apollo-server-errors": "^3.3.1",
    "axios": "^0.27.2",
    "date-and-time": "^2.4.2",
    "dotenv": "^16.0.2",
    "express": "^4.18.2",
    "graphql": "^16.6.0",
    "graphql-constraint-directive": "^4.1.2",
    "kysely": "^0.23.3",
    "pg": "^8.8.0",
    "postgres": "^3.3.2",
    "serverless-http": "^3.1.0",
    "typed-inject": "^3.0.1",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@serverless/typescript": "serverless/typescript",
    "@types/chai": "^4.3.3",
    "@types/express": "^4.17.14",
    "@types/mocha": "^9.1.1",
    "@typescript-eslint/eslint-plugin": "^5.48.0",
    "@typescript-eslint/parser": "^5.48.0",
    "chai": "^4.3.6",
    "esbuild": "^0.16.1",
    "eslint": "^8.23.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.0.1",
    "eslint-plugin-security": "^1.5.0",
    "eslint-plugin-simple-import-sort": "^8.0.0",
    "eslint-plugin-typescript-sort-keys": "^2.1.0",
    "eslint-plugin-unused-imports": "^2.0.0",
    "mocha": "^10.0.0",
    "prettier": "^2.7.1",
    "serverless": "^3.25.1",
    "serverless-bundle": "^5.5.0",
    "serverless-bundle-no-pg-native": "^1.3.0",
    "serverless-domain-manager": "^6.2.1",
    "serverless-dotenv-plugin": "^4.0.2",
    "serverless-esbuild": "^1.33.2",
    "serverless-offline": "^11.6.0",
    "serverless-offline-sqs": "^7.3.1",
    "serverless-offline-watcher": "^1.0.0",
    "serverless-output-to-env": "^1.0.2",
    "serverless-stack-termination-protection": "^2.0.2",
    "ts-loader": "^9.4.2",
    "ts-mocha": "^10.0.0",
    "ts-node": "^10.9.1",
    "ts-sinon": "^2.0.2",
    "typescript": "^4.9.3"
  },
  "eslintConfig": {
    "extends": "./eslintrc.json",
    "ignorePatterns": [
      "/src/migrations/_template.ts"
    ],
    "rules": {
      "@typescript-eslint/no-inferrable-types": "off",
      "import/extensions": "off"
    }
  },
  "prettier": "./prettier.json"
}
