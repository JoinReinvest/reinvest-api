{
  "name": "reinvest-api",
  "version": "1.0.0",
  "description": "ReInvest API",
  "main": "Reinvest/index.ts",
  "private": true,
  "engines": {
    "node": ">=18.0.0",
    "yarn": ">=1.22.0",
    "npm": "please-use-yarn"
  },
  "scripts": {
    "lint": "yarn eslint ./Reinvest ./test ./shared ./devops",
    "lint:errors": "yarn lint --quiet",
    "lint:fix": "yarn lint --fix",
    "check-types": "tsc --pretty",
    "test:characterization": "ts-mocha -r tsconfig-paths/register -p tsconfig.json --timeout 10000 test/characterization/**/*.test.ts",
    "bdd": "ts-mocha -r tsconfig-paths/register -p tsconfig.json --timeout 10000 'Reinvest/**/*.feature.ts'",
    "tdd": "ts-mocha -r tsconfig-paths/register -p tsconfig.json --timeout 10000 'Reinvest/**/*.test.ts'",
    "development:deploy:saas": "NODE_ENV=development serverless deploy -s development --config serverless-saas.ts",
    "development:deploy:functions": "NODE_ENV=development serverless deploy -s development --config serverless-functions.ts",
    "development:invoke:migrateUp": "NODE_ENV=development sls invoke -s development --function migration --config serverless-functions.ts",
    "development:invoke:migrateDown": "NODE_ENV=development sls invoke -s development --function migration --data 'down' --config serverless-functions.ts",
    "development:destroy:saas": "NODE_ENV=development serverless remove -s development --config serverless-saas.ts",
    "development:destroy:functions": "NODE_ENV=development serverless remove -s development --config serverless-functions.ts",
    "development:logs:api": "sls logs -s development -f api -t  --config serverless-functions.ts",
    "development:logs:tests": "sls logs -s development -f tests -t  --config serverless-functions.ts",
    "integrations:deploy:saas": "NODE_ENV=integrations serverless deploy -s integrations --config serverless-saas.ts",
    "integrations:deploy:functions": "NODE_ENV=integrations serverless deploy -s integrations --config serverless-functions.ts",
    "integrations:invoke:migrateUp": "NODE_ENV=integrations sls invoke -s integrations --function migration --config serverless-functions.ts",
    "integrations:invoke:migrateDown": "NODE_ENV=integrations sls invoke -s integrations --function migration --data 'down' --config serverless-functions.ts",
    "staging:deploy:saas": "NODE_ENV=staging serverless deploy -s staging --config serverless-saas.ts",
    "staging:deploy:functions": "NODE_ENV=staging serverless deploy -s staging --config serverless-functions.ts",
    "staging:invoke:migrateUp": "NODE_ENV=staging sls invoke -s staging --function migration --config serverless-functions.ts",
    "staging:invoke:migrateDown": "NODE_ENV=staging sls invoke -s staging --function migration --data 'down' --config serverless-functions.ts",
    "global:deploy": "NODE_ENV=global serverless deploy -s global --config serverless-global.ts",
    "global:redeploy": "tag=GLOBAL_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "production:deploy:saas": "NODE_ENV=production serverless deploy -s production --config serverless-saas.ts",
    "production:deploy:functions": "NODE_ENV=production serverless deploy -s production --config serverless-functions.ts",
    "production:invoke:migrateUp": "NODE_ENV=production sls invoke -s production --function migration --config serverless-functions.ts",
    "production:invoke:migrateDown": "NODE_ENV=production sls invoke -s production --function migration --data 'down' --config serverless-functions.ts",
    "local": "NODE_ENV=development SLS_DEBUG=* serverless offline start -s development --ignoreJWTSignature --noTimeout --reloadHandler --config serverless-local.ts",
    "local:invoke:postSignUp": "NODE_ENV=development sls invoke local -s development --function cognitoPostSignUpFunction --path ./devops/local/postSignUpRequest.json --config serverless-local.ts",
    "local:invoke:migrateUp": "NODE_ENV=development sls invoke local -s development --function migration --config serverless-local.ts",
    "local:invoke:migrateDown": "NODE_ENV=development sls invoke local -s development --function migration --data 'down' --config serverless-local.ts",
    "local:server": "docker-compose -f docker-compose.yml up",
    "development:redeploy:saas": "tag=DEVELOPMENT_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "integrations:redeploy:saas": "tag=INTEGRATIONS_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "staging:redeploy:saas": "tag=STAGING_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} ",
    "production:redeploy:saas": "tag=PRODUCTION_SAAS_DEPLOYMENT && git tag -d ${tag} && git push --delete origin ${tag}  && git tag ${tag}  && git push origin ${tag} "
  },
  "dependencies": {
    "@apollo/server": "^4.5.0",
    "@as-integrations/aws-lambda": "1.2.1",
    "@aws-sdk/client-cognito-identity-provider": "^3.259.0",
    "@aws-sdk/client-lambda": "^3.303.0",
    "@aws-sdk/client-s3": "^3.303.0",
    "@aws-sdk/client-sns": "^3.303.0",
    "@aws-sdk/client-sqs": "^3.303.0",
    "@aws-sdk/s3-request-presigner": "^3.303.0",
    "@graphql-tools/delegate": "^9.0.28",
    "@graphql-tools/merge": "^8.4.0",
    "@graphql-tools/schema": "^9.0.17",
    "@graphql-tools/stitch": "^8.7.44",
    "@sentry/node": "^7.47.0",
    "@sentry/serverless": "^7.47.0",
    "apollo-server-errors": "^3.3.1",
    "axios": "^1.3.4",
    "date-and-time": "^2.4.3",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "graphql": "^16.6.0",
    "graphql-constraint-directive": "^5.0.0",
    "kysely": "^0.24.2",
    "pg": "^8.10.0",
    "postgres": "^3.3.4",
    "serverless-http": "^3.2.0",
    "typed-inject": "^3.0.1",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@hookooekoo/configs-tsconfig": "0.0.16",
    "@hookooekoo/eslint-config": "0.2.1",
    "@serverless/typescript": "3.29.0",
    "@types/chai": "^4.3.3",
    "@types/express": "^4.17.14",
    "@types/mocha": "^10.0.1",
    "chai": "^4.3.7",
    "esbuild": "0.16.1",
    "mocha": "^10.2.0",
    "serverless": "^3.29.0",
    "serverless-bundle": "^6.0.0",
    "serverless-bundle-no-pg-native": "^1.3.0",
    "serverless-domain-manager": "^7.0.2",
    "serverless-dotenv-plugin": "^6.0.0",
    "serverless-esbuild": "^1.43.0",
    "serverless-offline": "^12.0.4",
    "serverless-offline-sqs": "^7.3.2",
    "serverless-offline-watcher": "^1.0.0",
    "serverless-output-to-env": "^1.0.2",
    "serverless-stack-termination-protection": "^2.0.2",
    "ts-loader": "^9.4.2",
    "ts-mocha": "^10.0.0",
    "ts-node": "^10.9.1",
    "ts-sinon": "^2.0.2",
    "typescript": "^5.0.4"
  },
  "eslintConfig": {
    "extends": "@hookooekoo/eslint-config",
    "rules": {
      "no-case-declarations": 0,
      "no-console": 0,
      "no-global-assign": 0,
      "@typescript-eslint/no-namespace": 0,
      "@typescript-eslint/ban-ts-comment": 1,
      "@typescript-eslint/no-explicit-any": 1,
      "no-return-await": 1,
      "@typescript-eslint/no-empty-interface": 1
    }
  },
  "prettier": "@hookooekoo/eslint-config/prettier.json"
}
